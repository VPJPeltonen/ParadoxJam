[gd_scene load_steps=11 format=2]

[ext_resource path="res://src/scripts/UI.gd" type="Script" id=1]
[ext_resource path="res://assets/fonts/Boldfont.tres" type="DynamicFont" id=2]
[ext_resource path="res://assets/textures/white.png" type="Texture" id=3]

[sub_resource type="Animation" id=1]
resource_name = "Teleport"
tracks/0/type = "value"
tracks/0/path = NodePath("ColorRect:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.7, 1 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;
uniform sampler2D NOISE_PATTERN;
uniform sampler2D NOISE_PATTERN_2;

void fragment() {
	vec3 c = textureLod(SCREEN_TEXTURE, SCREEN_UV, 7.0).rgb;
	vec2 newuv = UV;
    newuv.x += TIME;
	if(c.r < 0.25 && c.b < 0.25 && c.b < 0.25 ){
		float noiseValue = texture(NOISE_PATTERN, UV).x+sin(TIME/4.0);
		float noiseValue2 = texture(NOISE_PATTERN_2, UV).x+cos(TIME/7.0);
   		c = vec3(noiseValue)/7.0+vec3(noiseValue2)/8.0;
		c = vec3(floor(30.0*c.r)/100.0,floor(30.0*c.g)/200.0,floor(30.0*c.b)/200.0)/0.80;//
	}
	//c.r = 0.0;
	//c = vec3(1.0) - c;
	COLOR.rgb = c;
}

"

[sub_resource type="OpenSimplexNoise" id=4]

[sub_resource type="NoiseTexture" id=5]
noise = SubResource( 4 )

[sub_resource type="OpenSimplexNoise" id=6]

[sub_resource type="NoiseTexture" id=7]
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/NOISE_PATTERN = SubResource( 5 )
shader_param/NOISE_PATTERN_2 = SubResource( 7 )

[node name="UI" type="Control" groups=[
"UI",
]]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 1, 1, 1, 0 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/Teleport = SubResource( 1 )

[node name="GameOverScreen" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2

[node name="Label" type="Label" parent="GameOverScreen"]
anchor_top = 0.5
anchor_right = 1.0
anchor_bottom = 0.5
margin_top = -7.0
margin_bottom = 7.0
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 1, 0, 0, 1 )
custom_colors/font_outline_modulate = Color( 0, 0, 0, 1 )
text = "Game Over"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GameOverTimer" type="Timer" parent="GameOverScreen"]
wait_time = 2.0

[node name="RestartButton" type="Button" parent="GameOverScreen"]
anchor_left = 0.5
anchor_top = 0.6
anchor_right = 0.5
anchor_bottom = 0.6
margin_left = -28.5
margin_top = -10.0
margin_right = 28.5
margin_bottom = 10.0
text = "Restart"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ActionUI" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="ActionUI"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -171.0
margin_bottom = 55.0
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0, 0, 0, 1 )
text = "0:00:00"
align = 1
valign = 1

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 3 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
texture = ExtResource( 3 )
expand = true
[connection signal="timeout" from="GameOverScreen/GameOverTimer" to="." method="_on_GameOverTimer_timeout"]
[connection signal="pressed" from="GameOverScreen/RestartButton" to="." method="_on_RestartButton_pressed"]
